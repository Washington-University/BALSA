<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="4" failures="3" hostname="johnsdev" name="balsa.DataAccessTermsControllerSpec" tests="7" time="8.485" timestamp="2019-09-27T22:25:51">
  <properties />
  <testcase classname="balsa.DataAccessTermsControllerSpec" name="Test the index action returns the correct model" time="7.61">
    <error message="No signature of method: balsa.security.TermsController.index() is applicable for argument types: () values: []&#xa;Possible solutions: mine(), find(), render(groovy.lang.Closure), render(java.lang.CharSequence), render(java.lang.Object), render(java.lang.String)" type="groovy.lang.MissingMethodException">groovy.lang.MissingMethodException: No signature of method: balsa.security.TermsController.index() is applicable for argument types: () values: []
Possible solutions: mine(), find(), render(groovy.lang.Closure), render(java.lang.CharSequence), render(java.lang.Object), render(java.lang.String)
	at org.codehaus.groovy.grails.plugins.web.api.ControllerTagLibraryApi.methodMissing(ControllerTagLibraryApi.java:97)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1270)
	at balsa.DataAccessTermsControllerSpec.Test the index action returns the correct model(DataAccessTermsControllerSpec.groovy:22)
</error>
  </testcase>
  <testcase classname="balsa.DataAccessTermsControllerSpec" name="Test the create action returns the correct model" time="0.364">
    <failure message="Condition not satisfied:&#xa;&#xa;model.dataAccessTermsInstance!= null&#xa;|     |                      |&#xa;[:]   null                   false&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

model.dataAccessTermsInstance!= null
|     |                      |
[:]   null                   false

	at balsa.DataAccessTermsControllerSpec.Test the create action returns the correct model(DataAccessTermsControllerSpec.groovy:34)
</failure>
  </testcase>
  <testcase classname="balsa.DataAccessTermsControllerSpec" name="Test the save action correctly persists an instance" time="0.234">
    <failure message="Condition not satisfied:&#xa;&#xa;model.dataAccessTermsInstance!= null&#xa;|     |                      |&#xa;|     null                   false&#xa;[termsInstance:balsa.security.Terms : (unsaved)]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

model.dataAccessTermsInstance!= null
|     |                      |
|     null                   false
[termsInstance:balsa.security.Terms : (unsaved)]

	at balsa.DataAccessTermsControllerSpec.Test the save action correctly persists an instance(DataAccessTermsControllerSpec.groovy:47)
</failure>
  </testcase>
  <testcase classname="balsa.DataAccessTermsControllerSpec" name="Test that the show action returns the correct model" time="0.083">
    <failure message="Condition not satisfied:&#xa;&#xa;model.dataAccessTermsInstance == dataAccessTerms&#xa;|     |                       |  |&#xa;[:]   null                    |  balsa.security.Terms : (unsaved)&#xa;                              false&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

model.dataAccessTermsInstance == dataAccessTerms
|     |                       |  |
[:]   null                    |  balsa.security.Terms : (unsaved)
                              false

	at balsa.DataAccessTermsControllerSpec.Test that the show action returns the correct model(DataAccessTermsControllerSpec.groovy:76)
</failure>
  </testcase>
  <testcase classname="balsa.DataAccessTermsControllerSpec" name="Test that the edit action returns the correct model" time="0.027">
    <error message="No signature of method: balsa.security.TermsController.edit() is applicable for argument types: (null) values: [null]&#xa;Possible solutions: wait(), wait(long), wait(long, int), with(groovy.lang.Closure), print(java.io.PrintWriter), each(groovy.lang.Closure)" type="groovy.lang.MissingMethodException">groovy.lang.MissingMethodException: No signature of method: balsa.security.TermsController.edit() is applicable for argument types: (null) values: [null]
Possible solutions: wait(), wait(long), wait(long, int), with(groovy.lang.Closure), print(java.io.PrintWriter), each(groovy.lang.Closure)
	at org.codehaus.groovy.grails.plugins.web.api.ControllerTagLibraryApi.methodMissing(ControllerTagLibraryApi.java:97)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1270)
	at balsa.DataAccessTermsControllerSpec.Test that the edit action returns the correct model(DataAccessTermsControllerSpec.groovy:81)
</error>
  </testcase>
  <testcase classname="balsa.DataAccessTermsControllerSpec" name="Test the update action performs an update on a valid domain instance" time="0.035">
    <error message="No signature of method: balsa.security.TermsController.update() is applicable for argument types: (null) values: [null]&#xa;Possible solutions: create(), save(), save(balsa.security.Terms), isCase(java.lang.Object), putAt(java.lang.String, java.lang.Object), split(groovy.lang.Closure)" type="groovy.lang.MissingMethodException">groovy.lang.MissingMethodException: No signature of method: balsa.security.TermsController.update() is applicable for argument types: (null) values: [null]
Possible solutions: create(), save(), save(balsa.security.Terms), isCase(java.lang.Object), putAt(java.lang.String, java.lang.Object), split(groovy.lang.Closure)
	at org.codehaus.groovy.grails.plugins.web.api.ControllerTagLibraryApi.methodMissing(ControllerTagLibraryApi.java:97)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1270)
	at balsa.DataAccessTermsControllerSpec.Test the update action performs an update on a valid domain instance(DataAccessTermsControllerSpec.groovy:99)
</error>
  </testcase>
  <testcase classname="balsa.DataAccessTermsControllerSpec" name="Test that the delete action deletes an instance if it exists" time="0.023">
    <error message="No signature of method: balsa.security.TermsController.delete() is applicable for argument types: (null) values: [null]&#xa;Possible solutions: agree(), create(), every(), sleep(long), agree(balsa.security.Terms), every(groovy.lang.Closure)" type="groovy.lang.MissingMethodException">groovy.lang.MissingMethodException: No signature of method: balsa.security.TermsController.delete() is applicable for argument types: (null) values: [null]
Possible solutions: agree(), create(), every(), sleep(long), agree(balsa.security.Terms), every(groovy.lang.Closure)
	at org.codehaus.groovy.grails.plugins.web.api.ControllerTagLibraryApi.methodMissing(ControllerTagLibraryApi.java:97)
	at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(ReflectiveInterceptor.java:1270)
	at balsa.DataAccessTermsControllerSpec.Test that the delete action deletes an instance if it exists(DataAccessTermsControllerSpec.groovy:131)
</error>
  </testcase>
  <system-out><![CDATA[--Output from Test the index action returns the correct model--
--Output from Test the create action returns the correct model--
--Output from Test the save action correctly persists an instance--
--Output from Test that the show action returns the correct model--
--Output from Test that the edit action returns the correct model--
--Output from Test the update action performs an update on a valid domain instance--
--Output from Test that the delete action deletes an instance if it exists--
]]></system-out>
  <system-err><![CDATA[--Output from Test the index action returns the correct model--
--Output from Test the create action returns the correct model--
--Output from Test the save action correctly persists an instance--
--Output from Test that the show action returns the correct model--
--Output from Test that the edit action returns the correct model--
--Output from Test the update action performs an update on a valid domain instance--
--Output from Test that the delete action deletes an instance if it exists--
]]></system-err>
</testsuite>
